version: "3.8"

services:
  backend:
    build: .
    restart: unless-stopped
    volumes:
      - ./app:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/diecastdb
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET=diecast
      - S3_USE_SSL=false
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - JWT_ACCESS_TOKEN_EXPIRES_MINUTES=60
      - JWT_REFRESH_TOKEN_EXPIRES_DAYS=30
      - MIDTRANS_SERVER_KEY=your_midtrans_server_key
      - MIDTRANS_CLIENT_KEY=your_midtrans_client_key
      - MIDTRANS_IS_PRODUCTION=false
      - FRONTEND_URL=http://localhost:3000
      - ADMIN_EMAIL=admin@localhost
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - PYTHON_ENV=development
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: diecastdb
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console UI

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  postgres_data:
  minio_data:
  pgadmin_data: